version: "3.7"

services:
  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    container_name: zookeeper
    restart: always
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    networks:
      - integration-net

  kafka:
    image: confluentinc/cp-kafka:latest
    container_name: kafka
    restart: always
    ports:
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    depends_on:
      - zookeeper
    networks:
      - integration-net
    command: >
      bash -c "
      /etc/confluent/docker/run &
      sleep 10 &&
      kafka-topics --create --if-not-exists --topic solicitar-estado-cuenta --bootstrap-server localhost:9092 --partitions 1 --replication-factor 1 &&
      kafka-topics --create --if-not-exists --topic cuentasdb.public.cuentas --bootstrap-server localhost:9092 --partitions 1 --replication-factor 1 &&
      kafka-topics --create --if-not-exists --topic cuentasdb.public.consumos --bootstrap-server localhost:9092 --partitions 1 --replication-factor 1 &&
      wait
      "

  # postgres:
  postgres:
    image: postgres:14-alpine
    container_name: postgres-cuentas
    environment:
      POSTGRES_DB: cuentasdb
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - integration-net

  ms-cuentas:
    build:
      context: ./services/ms-cuentas
      dockerfile: Dockerfile
    container_name: ms-cuentas
    environment:
      DB_HOST: postgres
      DB_PORT: 5432
      DB_NAME: cuentasdb
      DB_USER: postgres
      DB_PASSWORD: postgres
    ports:
      - "8080:8080"
      - "9090:9090"
    depends_on:
      - postgres
    networks:
      - integration-net
  mariadb:
    container_name: mariadb
    image: mariadb:10.5
    environment:
      MYSQL_ROOT_PASSWORD: rootpassword
      MYSQL_DATABASE: cuentasdb
      MYSQL_USER: user
      MYSQL_PASSWORD: password
    ports:
      - "3305:3306"
    volumes:
      - mariadb-data:/var/lib/mysql
    networks:
      - integration-net

  kafka-consumer:
    container_name: kafka-consumer
    build:
      context: ./services/micro-cdc/kafka-consumer
      dockerfile: Dockerfile
    depends_on:
      - kafka
      - mariadb
    environment:
      KAFKA_BROKER: kafka:9092
      MARIADB_HOST: mariadb
      MARIADB_USER: user
      MARIADB_PASSWORD: password
      MARIADB_DATABASE: cuentasdb
    volumes:
      - ./kafka-consumer:/app
    networks:
      - integration-net

  # GraphQL Gateway
  # gateway-graphql:
  #   build: ./services/gateway-graphql
  #   container_name: gateway-graphql
  #   ports:
  #     - "4000:4000"
  #   depends_on:
  #     - ms-cuentas
  #     - micro-estado-cuenta
  #     # mas servicios
  #   networks:
  #     - integration-net

  debezium:
    image: debezium/connect:1.7
    depends_on:
      - kafka
      #- postgres
    environment:
      BOOTSTRAP_SERVERS: kafka:9092
      GROUP_ID: 1
      CONFIG_STORAGE_TOPIC: my_connect_configs
      OFFSET_STORAGE_TOPIC: my_connect_offsets
      STATUS_STORAGE_TOPIC: my_connect_statuses
    ports:
      - "8083:8083"
    volumes:
      - ./debezium-connector:/debezium-connector
    networks:
      - integration-net

  # GraphQL Gateway
  # gateway-graphql:
  #   build: ./services/gateway-graphql
  #   container_name: gateway-graphql
  #   ports:
  #     - "4000:4000"
  #   depends_on:
  #     - ms-cuentas
  #     - micro-estado-cuenta
  #     # mas servicios
  #   networks:
  #     - integration-net

  # micro-estado-cuenta:
  #   build:
  #       context: ./services/micro-estado-cuenta
  #       dockerfile: Dockerfile
  #   container_name: micro-estado-cuenta
  #   ports:
  #     - "26061:26061"
  #   depends_on:
  #     - kafka
  #   networks:
  #     - integration-net

  # micro-estado-cuenta-notificacion:
  #   build:
  #       context: ./services/micro-estado-cuenta-notificacion
  #       dockerfile: Dockerfile
  #   container_name: micro-estado-cuenta-notificacion
  #   depends_on:
  #     - kafka
  #   networks:
  #     - integration-net

networks:
  integration-net:
    driver: bridge

volumes:
  #mysql_data:
  postgres_data:
  mariadb-data:
